package task_views

import (
	"fmt"
	"github.com/mjmarrazzo/maintenance-app/components/common"
	"github.com/mjmarrazzo/maintenance-app/domain"
)

type ListProps struct {
	Tasks []*domain.Task
}

templ List(props ListProps) {
	@common.Page("Tasks") {
		<div class="card card-lg card-border shadow-md mx-auto">
			<div class="card-body">
				<div class="card-title justify-between">
					<h2 class="text-2xl font-bold">Tasks</h2>
					<button
						class="btn btn-primary self-end"
						hx-get="/tasks/form"
						hx-target="#task-modal-content"
						onclick="task_modal.showModal()"
					>
						<span class="hidden md:inline">Create Task</span>
						<i data-lucide="plus" class="md:hidden"></i>
					</button>
				</div>
				<ul class="list">
					if len(props.Tasks) == 0 {
						@common.NoResults(
							"Tasks",
							"No tasks found.",
							"Create a new task to get started.",
						)
					}
					for _, task := range props.Tasks {
						<li
							class="list-row animate-slide-in"
						>
							<div class="list-col-grow">
								<div class="text-lg font-bold">
									{ task.Title }
								</div>
								<div class="opacity-60">
									{ task.Description }
								</div>
							</div>
							<button
								class="btn btn-square btn-ghost"
								hx-get={ fmt.Sprintf("/tasks/%d/form", task.ID) }
								hx-target="#task-modal-content"
								hx-on::after-request="
									if(event.detail.failed){
										showToast('Failed to load form', 'error');
										task_modal.close();
									}
								"
								onclick="task_modal.showModal()"
							>
								<i data-lucide="pencil"></i>
							</button>
							<button
								class="btn btn-square btn-ghost"
								hx-delete={ fmt.Sprintf("/tasks/%d", task.ID) }
								hx-on::after-request="
									if(event.detail.failed){
										showToast('Failed to delete task', 'error');
									}
								"
								hx-confirm={ fmt.Sprintf("Are you sure you want to delete the '%s' task and its subtasks?", task.Title) }
							>
								<i data-lucide="trash-2" class="text-red-500"></i>
							</button>
						</li>
					}
				</ul>
			</div>
		</div>
		@common.Dialog(common.DialogProps{
			ID:        "task_modal",
			ContentID: "task-modal-content",
		})
	}
}
