package form

type PasswordProps struct {
	ID           string
	Label        string
	Autocomplete autocomplete
	Hint         string
}

templ Password(props PasswordProps) {
	<div class="form-control w-full">
		<label class="label" for={ props.ID }>
			<span class="label-text">
				{ props.Label }
			</span>
		</label>
		<div class="w-full">
			<div class="join w-full validator">
				<input
					type="password"
					id={ props.ID }
					name={ props.ID }
					class="join-item input input-bordered focus:outline-1 focus:outline-blue-800 w-full"
					required
					autocomplete={ string(props.Autocomplete) }
				/>
				<button
					type="button"
					class="join-item btn btn-square btn-ghost bg-base-100 text-gray-500 hover:text-gray-700"
					onclick={ templ.JSFuncCall("togglePasswordVisibility", props.ID) }
					aria-label="Toggle password visibility"
				>
					<i data-lucide="eye" class="size-5" id={ "eye-" + props.ID }></i>
					<i data-lucide="eye-off" class="size-5 hidden" id={ "eye-off-" + props.ID }></i>
				</button>
			</div>
			<p class="validator-hint hidden">{ props.Hint }</p>
		</div>
	</div>
	<script>
        function togglePasswordVisibility(id) {
            const input = document.getElementById(id);
            const eyeIcon = document.getElementById('eye-' + id);
            const eyeOffIcon = document.getElementById('eye-off-' + id);

            if (input.type === "password") {
                input.type = "text";
                eyeIcon.classList.add("hidden");
                eyeOffIcon.classList.remove("hidden");
            } else {
                input.type = "password";
                eyeIcon.classList.remove("hidden");
                eyeOffIcon.classList.add("hidden");
            }
        }
    </script>
}
