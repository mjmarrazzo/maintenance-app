package auth_views

import "github.com/mjmarrazzo/maintenance-app/internal/views/common"

import "github.com/mjmarrazzo/maintenance-app/internal/views/components/form"

type RegisterProps struct {
	Email string
}

templ Register(props RegisterProps) {
	@common.BaseHtml("Register") {
		<div
			class="hero min-h-screen"
			style="background-image: url(/public/illustrations/hero.png);"
		>
			<div class="hero-overlay bg-opacity-60"></div>
			<div class="flex justify-center items-center">
				<div id="registration-card" class="card backdrop-blur-lg bg-white/20 shadow-xl ">
					<div class="card-body">
						<h2 class="text-3xl font-bold text-white text-center">Welcome to Groundwork!</h2>
						<form
							id="registration-form"
							class="flex flex-col gap-4 p-4"
							hx-post="/register"
							hx-indicator="#form-spinner"
							hx-disabled-elt="button[type=submit]"
						>
							@form.Input(form.InputProps{
								ID:           "email",
								Label:        "Email",
								Type:         "email",
								Value:        props.Email,
								Hint:         "Enter a valid email address",
								Autocomplete: form.AutocompleteUsername,
								IsRequired:   true,
							})
							@form.Password(form.PasswordProps{
								ID:           "password",
								Label:        "Password",
								Autocomplete: form.AutocompleteCurrentPassword,
								Hint:         "Required",
							})
							@form.Password(form.PasswordProps{
								ID:           "password-confirmation",
								Label:        "Confirm Password",
								Autocomplete: form.AutocompleteCurrentPassword,
								Hint:         "Passwords must match",
							})
							@form.Input(form.InputProps{
								ID:           "first_name",
								Label:        "First Name",
								Type:         "text",
								Hint:         "Required",
								Autocomplete: form.AutocompleteGivenName,
								IsRequired:   true,
							})
							@form.Input(form.InputProps{
								ID:           "last_name",
								Label:        "Last Name",
								Type:         "text",
								Hint:         "Required",
								Autocomplete: form.AutocompleteFamilyName,
								IsRequired:   true,
							})
							<button class="btn btn-primary btn-block mt-2 shadow-md" type="submit">Login</button>
						</form>
					</div>
				</div>
			</div>
		</div>
		<script>
            // Function to check passwords match on dirty of password confirmation
            const passwordInput = document.getElementById('password');
            const passwordConfirmationInput = document.getElementById('password-confirmation');
            const passwordHint = passwordConfirmationInput.nextElementSibling;
            passwordConfirmationInput.addEventListener('input', function(event) {
                if (passwordInput.value !== passwordConfirmationInput.value) {
                    passwordConfirmationInput.setCustomValidity("Passwords do not match");
                } else {
                    passwordConfirmationInput.setCustomValidity("");
                }
            });

        </script>
	}
}
